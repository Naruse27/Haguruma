//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 materialColor;              // Offset:   64 Size:    16
//   row_major float4x4 boneTransforms[256];// Offset:   80 Size: 16384
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 lightDirection;             // Offset:   64 Size:    16 [unused]
//   float4 cameraPosition;             // Offset:   80 Size:    16 [unused]
//
// }
//
// cbuffer SHADOWMAP_CONSTANT_BUFFER
// {
//
//   row_major float4x4 lightViewProjection;// Offset:    0 Size:    64
//   float3 shadowColor;                // Offset:   64 Size:    12 [unused]
//   float shadowBias;                  // Offset:   76 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// SHADOWMAP_CONSTANT_BUFFER         cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// BINORMAL                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// WEIGHTS                  0   xyzw        5     NONE   float   xyzw
// BONES                    0   xyzw        6     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// BINORMAL                 0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 1   xyzw        7     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB0[1029], dynamicIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_constantbuffer CB6[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xy
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xy
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 13
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.binormal.x; v3.y <- vin.binormal.y; v3.z <- vin.binormal.z; v3.w <- vin.binormal.w; 
//   v4.x <- vin.texcoord.x; v4.y <- vin.texcoord.y; 
//   v5.x <- vin.boneWeights.x; v5.y <- vin.boneWeights.y; v5.z <- vin.boneWeights.z; v5.w <- vin.boneWeights.w; 
//   v6.x <- vin.boneIndices.x; v6.y <- vin.boneIndices.y; v6.z <- vin.boneIndices.z; v6.w <- vin.boneIndices.w; 
//   o7.x <- <main return value>.shadowTexcoord.x; o7.y <- <main return value>.shadowTexcoord.y; o7.z <- <main return value>.shadowTexcoord.z; o7.w <- <main return value>.shadowTexcoord.w; 
//   o6.x <- <main return value>.color.x; o6.y <- <main return value>.color.y; o6.z <- <main return value>.color.z; o6.w <- <main return value>.color.w; 
//   o5.x <- <main return value>.texcoord.x; o5.y <- <main return value>.texcoord.y; 
//   o4.x <- <main return value>.worldBinormal.x; o4.y <- <main return value>.worldBinormal.y; o4.z <- <main return value>.worldBinormal.z; o4.w <- <main return value>.worldBinormal.w; 
//   o3.x <- <main return value>.worldTangent.x; o3.y <- <main return value>.worldTangent.y; o3.z <- <main return value>.worldTangent.z; o3.w <- <main return value>.worldTangent.w; 
//   o2.x <- <main return value>.worldNormal.x; o2.y <- <main return value>.worldNormal.y; o2.z <- <main return value>.worldNormal.z; o2.w <- <main return value>.worldNormal.w; 
//   o1.x <- <main return value>.worldPosition.x; o1.y <- <main return value>.worldPosition.y; o1.z <- <main return value>.worldPosition.z; o1.w <- <main return value>.worldPosition.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 6 "D:\„ÉÅE"
itof r0.x, l(0)  // r0.x <- vin.normal.w

#line 8
mov r0.y, v2.w  // r0.y <- sigma

#line 9
itof r0.z, l(0)  // r0.z <- vin.tangent.w

#line 12
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- blendedPosition.x; r1.y <- blendedPosition.y; r1.z <- blendedPosition.z

#line 13
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- blendedNormal.x; r2.y <- blendedNormal.y; r2.z <- blendedNormal.z

#line 14
itof r3.xyz, l(0, 0, 0, 0)  // r3.x <- blendedTangent.x; r3.y <- blendedTangent.y; r3.z <- blendedTangent.z

#line 15
itof r4.xyz, l(0, 0, 0, 0)  // r4.x <- blendedBinormal.x; r4.y <- blendedBinormal.y; r4.z <- blendedBinormal.z

#line 16
mov r0.w, l(0)  // r0.w <- boneIndex
mov r5.xyz, r1.xyzx  // r5.x <- blendedPosition.x; r5.y <- blendedPosition.y; r5.z <- blendedPosition.z
mov r6.xyz, r2.xyzx  // r6.x <- blendedNormal.x; r6.y <- blendedNormal.y; r6.z <- blendedNormal.z
mov r7.xyz, r3.xyzx  // r7.x <- blendedTangent.x; r7.y <- blendedTangent.y; r7.z <- blendedTangent.z
mov r8.xyz, r4.xyzx  // r8.x <- blendedBinormal.x; r8.y <- blendedBinormal.y; r8.z <- blendedBinormal.z
mov r1.w, r0.w  // r1.w <- boneIndex
loop 
  ilt r2.w, r1.w, l(4)
  breakc_z r2.w

#line 18
  dp4 r2.w, v5.xyzw, icb[r1.w + 0].xyzw
  and r9.xyzw, v6.xyzw, icb[r1.w + 4].xyzw
  or r9.xy, r9.ywyy, r9.xzxx
  or r3.w, r9.y, r9.x
  imul null, r3.w, r3.w, l(4)
  mul r9.xyz, v0.xxxx, cb0[r3.w + 5].xyzx
  mul r10.xyz, v0.yyyy, cb0[r3.w + 6].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r10.xyz, v0.zzzz, cb0[r3.w + 7].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r10.xyz, v0.wwww, cb0[r3.w + 8].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r9.xyz, r2.wwww, r9.xyzx
  add r5.xyz, r5.xyzx, r9.xyzx

#line 20
  dp4 r2.w, v5.xyzw, icb[r1.w + 0].xyzw
  and r9.xyzw, v6.xyzw, icb[r1.w + 4].xyzw
  or r9.xy, r9.ywyy, r9.xzxx
  or r3.w, r9.y, r9.x
  imul null, r3.w, r3.w, l(4)
  mul r9.xyz, v1.xxxx, cb0[r3.w + 5].xyzx
  mul r10.xyz, v1.yyyy, cb0[r3.w + 6].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r10.xyz, v1.zzzz, cb0[r3.w + 7].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r10.xyz, r0.xxxx, cb0[r3.w + 8].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r9.xyz, r2.wwww, r9.xyzx
  add r6.xyz, r6.xyzx, r9.xyzx

#line 22
  dp4 r2.w, v5.xyzw, icb[r1.w + 0].xyzw
  and r9.xyzw, v6.xyzw, icb[r1.w + 4].xyzw
  or r9.xy, r9.ywyy, r9.xzxx
  or r3.w, r9.y, r9.x
  imul null, r3.w, r3.w, l(4)
  mul r9.xyz, v2.xxxx, cb0[r3.w + 5].xyzx
  mul r10.xyz, v2.yyyy, cb0[r3.w + 6].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r10.xyz, v2.zzzz, cb0[r3.w + 7].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r10.xyz, r0.zzzz, cb0[r3.w + 8].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r9.xyz, r2.wwww, r9.xyzx
  add r7.xyz, r7.xyzx, r9.xyzx

#line 24
  dp4 r2.w, v5.xyzw, icb[r1.w + 0].xyzw
  and r9.xyzw, v6.xyzw, icb[r1.w + 4].xyzw
  or r9.xy, r9.ywyy, r9.xzxx
  or r3.w, r9.y, r9.x
  imul null, r3.w, r3.w, l(4)
  mul r9.xyz, v3.xxxx, cb0[r3.w + 5].xyzx
  mul r10.xyz, v3.yyyy, cb0[r3.w + 6].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r10.xyz, v3.zzzz, cb0[r3.w + 7].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r10.xyz, v3.wwww, cb0[r3.w + 8].xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r9.xyz, r2.wwww, r9.xyzx
  add r8.xyz, r8.xyzx, r9.xyzx

#line 26
  iadd r1.w, r1.w, l(1)
endloop 

#line 27
mov r5.xyz, r5.xyzx  // r5.x <- vin.position.x; r5.y <- vin.position.y; r5.z <- vin.position.z
mov r0.x, l(1.000000)  // r0.x <- vin.position.w

#line 28
mov r6.w, l(0)
mov r6.xyzw, r6.xyzw  // r6.x <- vin.normal.x; r6.y <- vin.normal.y; r6.z <- vin.normal.z; r6.w <- vin.normal.w

#line 29
mov r7.w, l(0)
mov r7.xyzw, r7.xyzw  // r7.x <- vin.tangent.x; r7.y <- vin.tangent.y; r7.z <- vin.tangent.z; r7.w <- vin.tangent.w

#line 30
mov r8.w, l(0)
mov r8.xyzw, r8.xyzw  // r8.x <- vin.binormal.x; r8.y <- vin.binormal.y; r8.z <- vin.binormal.z; r8.w <- vin.binormal.w

#line 33
mul r1.xyzw, cb0[0].xxxx, cb1[0].xyzw
mul r2.xyzw, cb0[0].yyyy, cb1[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[0].zzzz, cb1[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[0].wwww, cb1[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[1].xxxx, cb1[0].xyzw
mul r3.xyzw, cb0[1].yyyy, cb1[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[1].zzzz, cb1[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[1].wwww, cb1[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[2].xxxx, cb1[0].xyzw
mul r4.xyzw, cb0[2].yyyy, cb1[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[2].zzzz, cb1[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[2].wwww, cb1[3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[3].xxxx, cb1[0].xyzw
mul r9.xyzw, cb0[3].yyyy, cb1[1].xyzw
add r4.xyzw, r4.xyzw, r9.xyzw
mul r9.xyzw, cb0[3].zzzz, cb1[2].xyzw
add r4.xyzw, r4.xyzw, r9.xyzw
mul r9.xyzw, cb0[3].wwww, cb1[3].xyzw
add r4.xyzw, r4.xyzw, r9.xyzw
mul r1.xyzw, r1.xyzw, r5.xxxx
mul r2.xyzw, r2.xyzw, r5.yyyy
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r3.xyzw, r5.zzzz
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.xxxx, r4.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- vout.position.x; r1.y <- vout.position.y; r1.z <- vout.position.z; r1.w <- vout.position.w

#line 35
mul r2.xyzw, r5.xxxx, cb0[0].xyzw
mul r3.xyzw, r5.yyyy, cb0[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r5.zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r0.xxxx, cb0[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- vout.worldPosition.x; r2.y <- vout.worldPosition.y; r2.z <- vout.worldPosition.z; r2.w <- vout.worldPosition.w

#line 36
mul r3.xyzw, r6.xxxx, cb0[0].xyzw
mul r4.xyzw, r6.yyyy, cb0[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r6.zzzz, cb0[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r6.wwww, cb0[3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
dp4 r0.z, r3.xyzw, r3.xyzw
rsq r0.z, r0.z
mul r3.xyzw, r0.zzzz, r3.xyzw  // r3.x <- vout.worldNormal.x; r3.y <- vout.worldNormal.y; r3.z <- vout.worldNormal.z; r3.w <- vout.worldNormal.w

#line 37
mul r4.xyzw, r7.xxxx, cb0[0].xyzw
mul r6.xyzw, r7.yyyy, cb0[1].xyzw
add r4.xyzw, r4.xyzw, r6.xyzw
mul r6.xyzw, r7.zzzz, cb0[2].xyzw
add r4.xyzw, r4.xyzw, r6.xyzw
mul r6.xyzw, r7.wwww, cb0[3].xyzw
add r4.xyzw, r4.xyzw, r6.xyzw
dp4 r0.z, r4.xyzw, r4.xyzw
rsq r0.z, r0.z
mul r4.xyz, r0.zzzz, r4.xyzx  // r4.x <- vout.worldTangent.x; r4.y <- vout.worldTangent.y; r4.z <- vout.worldTangent.z

#line 38
mul r6.xyzw, r8.xxxx, cb0[0].xyzw
mul r7.xyzw, r8.yyyy, cb0[1].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r8.zzzz, cb0[2].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r8.wwww, cb0[3].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
dp4 r0.z, r6.xyzw, r6.xyzw
rsq r0.z, r0.z
mul r6.xyzw, r0.zzzz, r6.xyzw  // r6.x <- vout.worldBinormal.x; r6.y <- vout.worldBinormal.y; r6.z <- vout.worldBinormal.z; r6.w <- vout.worldBinormal.w

#line 39
mov r0.y, r0.y  // r0.y <- vout.worldTangent.w

#line 41
mov r0.zw, v4.xxxy  // r0.z <- vout.texcoord.x; r0.w <- vout.texcoord.y

#line 42
mov r7.xyzw, cb0[4].xyzw  // r7.x <- vout.color.x; r7.y <- vout.color.y; r7.z <- vout.color.z; r7.w <- vout.color.w

#line 47
mul r8.xyzw, cb0[0].xxxx, cb6[0].xyzw
mul r9.xyzw, cb0[0].yyyy, cb6[1].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, cb0[0].zzzz, cb6[2].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, cb0[0].wwww, cb6[3].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, cb0[1].xxxx, cb6[0].xyzw
mul r10.xyzw, cb0[1].yyyy, cb6[1].xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, cb0[1].zzzz, cb6[2].xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, cb0[1].wwww, cb6[3].xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, cb0[2].xxxx, cb6[0].xyzw
mul r11.xyzw, cb0[2].yyyy, cb6[1].xyzw
add r10.xyzw, r10.xyzw, r11.xyzw
mul r11.xyzw, cb0[2].zzzz, cb6[2].xyzw
add r10.xyzw, r10.xyzw, r11.xyzw
mul r11.xyzw, cb0[2].wwww, cb6[3].xyzw
add r10.xyzw, r10.xyzw, r11.xyzw
mul r11.xyzw, cb0[3].xxxx, cb6[0].xyzw
mul r12.xyzw, cb0[3].yyyy, cb6[1].xyzw
add r11.xyzw, r11.xyzw, r12.xyzw
mul r12.xyzw, cb0[3].zzzz, cb6[2].xyzw
add r11.xyzw, r11.xyzw, r12.xyzw
mul r12.xyzw, cb0[3].wwww, cb6[3].xyzw
add r11.xyzw, r11.xyzw, r12.xyzw
mul r8.xyzw, r5.xxxx, r8.xyzw
mul r9.xyzw, r5.yyyy, r9.xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r5.xyzw, r5.zzzz, r10.xyzw
add r5.xyzw, r5.xyzw, r8.xyzw
mul r8.xyzw, r0.xxxx, r11.xyzw
add r5.xyzw, r5.xyzw, r8.xyzw  // r5.x <- wvpPos.x; r5.y <- wvpPos.y; r5.z <- wvpPos.z; r5.w <- wvpPos.w

#line 49
div r5.xyz, r5.xyzx, r5.wwww

#line 50
mov r5.w, -r5.y  // r5.w <- wvpPos.y

#line 51
mul r8.xy, r5.xwxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r5.xy, r8.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r5.y <- wvpPos.y

#line 52
itof r5.w, l(0)  // r5.w <- vout.shadowTexcoord.w
mov r5.xy, r5.xyxx  // r5.x <- vout.shadowTexcoord.x; r5.y <- vout.shadowTexcoord.y
mov r5.z, r5.z  // r5.z <- vout.shadowTexcoord.z

#line 55
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r2.xyzw
mov o2.xyzw, r3.xyzw
mov o3.xyz, r4.xyzx
mov o3.w, r0.y
mov o4.xyzw, r6.xyzw
mov o6.xyzw, r7.xyzw
mov o7.xyzw, r5.xyzw
mov o5.xy, r0.zwzz
ret 
// Approximately 209 instruction slots used
