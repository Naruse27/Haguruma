//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER_LIGHT
// {
//
//   float4 LightColor;                 // Offset:    0 Size:    16
//   float4 LightDir;                   // Offset:   16 Size:    16
//   float4 AmbientColor;               // Offset:   32 Size:    16
//   float4 EyePosition;                // Offset:   48 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// pointSampler                      sampler      NA          NA             s0      1 
// anisotropicSampler                sampler      NA          NA             s2      1 
// diffuseTexture                    texture  float4          2d             t0      1 
// normalTexture                     texture  float4          2d             t1      1 
// CONSTANT_BUFFER_LIGHT             cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float       
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 11
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   v3.x <- pin.worldNormal.x; v3.y <- pin.worldNormal.y; v3.z <- pin.worldNormal.z; 
//   v4.x <- pin.worldPos.x; v4.y <- pin.worldPos.y; v4.z <- pin.worldPos.z; 
//   v5.x <- pin.vT.x; v5.y <- pin.vT.y; v5.z <- pin.vT.z; 
//   v6.x <- pin.vB.x; v6.y <- pin.vB.y; v6.z <- pin.vB.z; 
//   v7.x <- pin.vN.x; v7.y <- pin.vN.y; v7.z <- pin.vN.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 15 "D:\自作\Rebel - コピE\Library\Shader\NormalMapSkinnedMeshPS.hlsl"
mov r0.xyz, -v4.xyzx
add r0.xyz, r0.xyzx, cb2[3].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- E.x; r0.y <- E.y; r0.z <- E.z

#line 16
dp3 r0.w, cb2[1].xyzx, cb2[1].xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, cb2[1].xyzx  // r1.x <- L.x; r1.y <- L.y; r1.z <- L.z

#line 19
mov r2.xyz, cb2[2].xyzx  // r2.x <- A.x; r2.y <- A.y; r2.z <- A.z

#line 20
mov r3.xyz, cb2[0].xyzx  // r3.x <- C.x; r3.y <- C.y; r3.z <- C.z

#line 23
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, v5.xyzx  // r4.x <- vx.x; r4.y <- vx.y; r4.z <- vx.z

#line 24
dp3 r0.w, v6.xyzx, v6.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, v6.xyzx  // r5.x <- vy.x; r5.y <- vy.y; r5.z <- vy.z

#line 25
dp3 r0.w, v7.xyzx, v7.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, v7.xyzx  // r6.x <- vz.x; r6.y <- vz.y; r6.z <- vz.z

#line 42
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v2.xyxx, t0.xyzw, s2  // r7.x <- color.x; r7.y <- color.y; r7.z <- color.z; r7.w <- color.w

#line 43
sample_indexable(texture2d)(float,float,float,float) r8.xyz, v2.xyxx, t1.xyzw, s0
mov r8.xyz, r8.xyzx  // r8.x <- N.x; r8.y <- N.y; r8.z <- N.z

#line 44
mul r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r9.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r8.xyz, r8.xyzx, r9.xyzx

#line 47
mov r9.x, r4.x  // r9.x <- mat._m00
mov r9.y, r5.x  // r9.y <- mat._m10
mov r9.z, r6.x  // r9.z <- mat._m20
mov r10.x, r4.y  // r10.x <- mat._m01
mov r10.y, r5.y  // r10.y <- mat._m11
mov r10.z, r6.y  // r10.z <- mat._m21
mov r6.x, r4.z  // r6.x <- mat._m02
mov r6.y, r5.z  // r6.y <- mat._m12
mov r6.z, r6.z  // r6.z <- mat._m22

#line 48
dp3 r4.x, r8.xyzx, r9.xyzx
dp3 r4.y, r8.xyzx, r10.xyzx
dp3 r4.z, r8.xyzx, r6.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx  // r4.x <- N.x; r4.y <- N.y; r4.z <- N.z

#line 51
itof r5.xyz, l(1, 1, 1, 0)  // r5.x <- Kd.x; r5.y <- Kd.y; r5.z <- Kd.z

#line 52
nop 
mov r4.xyz, r4.xyzx
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r5.xyz, r5.xyzx

#line 40 "D:\自作\Rebel - コピー\Library\Shader\Function.hlsli"
mov r6.xyz, -r1.xyzx
dp3 r0.w, r4.xyzx, r6.xyzx  // r0.w <- D

#line 41
itof r1.w, l(0)
max r0.w, r0.w, r1.w

#line 42
mul r5.xyz, r3.xyzx, r5.xyzx
mul r5.xyz, r0.wwww, r5.xyzx  // r5.x <- <Diffuse return value>.x; r5.y <- <Diffuse return value>.y; r5.z <- <Diffuse return value>.z

#line 52 "D:\自作\Rebel - コピE\Library\Shader\NormalMapSkinnedMeshPS.hlsl"
mov r5.xyz, r5.xyzx  // r5.x <- D.x; r5.y <- D.y; r5.z <- D.z

#line 55
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- Ks.x; r6.y <- Ks.y; r6.z <- Ks.z

#line 56
nop 
mov r4.xyz, r4.xyzx
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r0.xyz, r0.xyzx
mov r6.xyz, r6.xyzx
itof r0.w, l(200)

#line 56 "D:\自作\Rebel - コピー\Library\Shader\Function.hlsli"
mov r1.xyz, -r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r1.x, r0.xyzx, r0.xyzx
rsq r1.x, r1.x
mul r0.xyz, r0.xyzx, r1.xxxx  // r0.x <- H.x; r0.y <- H.y; r0.z <- H.z

#line 58
dp3 r0.z, r0.xyzx, r4.xyzx
mov r0.xyz, r0.zzzz  // r0.x <- S.x; r0.y <- S.y; r0.z <- S.z

#line 59
itof r1.xyz, l(0, 0, 0, 0)
max r0.xyz, r0.xyzx, r1.xyzx

#line 60
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, r0.wwww
exp r0.xyz, r0.xyzx  // r0.x <- S.x; r0.y <- S.y; r0.z <- S.z

#line 61
mul r0.xyz, r6.xyzx, r0.xyzx
mul r0.xyz, r3.xyzx, r0.xyzx  // r0.x <- S.x; r0.y <- S.y; r0.z <- S.z

#line 62
mov r0.xyz, r0.xyzx  // r0.x <- <BlinnPhongSpecular return value>.x; r0.y <- <BlinnPhongSpecular return value>.y; r0.z <- <BlinnPhongSpecular return value>.z

#line 56 "D:\自作\Rebel - コピE\Library\Shader\NormalMapSkinnedMeshPS.hlsl"
mov r0.xyz, r0.xyzx  // r0.x <- S.x; r0.y <- S.y; r0.z <- S.z

#line 58
add r1.xyz, r2.xyzx, r5.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mov r0.w, l(1.000000)
mul r0.xyzw, r0.xyzw, v1.xyzw
mul r0.xyzw, r0.xyzw, r7.xyzw  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 59
mov o0.xyzw, r0.xyzw
ret 
// Approximately 84 instruction slots used
